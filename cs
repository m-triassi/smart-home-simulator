[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex 21f0ac7..2c99010 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -3,6 +3,7 @@[m [mtarget/[m
 !.mvn/wrapper/maven-wrapper.jar[m
 !**/src/main/**/target/[m
 !**/src/test/**/target/[m
[32m+[m[32mapplication.properties[m
 [m
 ### STS ###[m
 .apt_generated[m
[1mdiff --git a/README.md b/README.md[m
[1mindex f5a9c57..ae457ac 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -45,11 +45,33 @@[m [mYou can [get it here](https://www.oracle.com/java/technologies/javase-downloads.[m
 *A Portion of these instructions were taken from the oracle help pages, [here](https://docs.oracle.com/en/java/javase/11/install/installation-jdk-microsoft-windows-platforms.html#GUID-371F38CC-248F-49EC-BB9C-C37FC89E52A0)*.[m
 If you need more comprehensive information, be sure to visit that page. [m
 [m
[32m+[m[32m### MySql[m
[32m+[m[32m- Required Version: `^5.7`[m
[32m+[m
[32m+[m[32mThis project also requires a MySql Database to be running.[m[41m [m
[32m+[m
[32m+[m[32m_TODO: setup instructions_[m
[32m+[m
 ### Node[m
[32m+[m[32m- Required Version: `^14.0`[m
[32m+[m
 Node is a Javascript runtime, its package manager holds all of our front end dependencies.[m
 [m
 _TODO: add install Instructions_[m
 [m
[32m+[m[32m### Application Properties[m
[32m+[m[32mOnce set up, you'll need to add your database credentials to the `application.properties` file.[m
[32m+[m[32m```[m
[32m+[m[32m# For MacOS[m
[32m+[m[32mcp application.properties.example application.properties[m
[32m+[m
[32m+[m[32m# for Windows[m
[32m+[m[32mcopy application.properties.example application.properties[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mmake sure to fill the `application.properties` with the appropriate credentials.[m[41m [m
[32m+[m
[32m+[m
 ## Usage [m
 To  run the project, you'll want to build it first. To do that, `cd` into the project directory and run:[m
 [m
[36m@@ -62,4 +84,13 @@[m [mTo  run the project, you'll want to build it first. To do that, `cd` into the pr[m
 ``` [m
 [m
 Maven will build the java files and start a local server at http://localhost:8080[m
[31m-From there you can hit just about any end point in the application.[m
\ No newline at end of file[m
[32m+[m[32mFrom there you can hit just about any end point in the application.[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m## Support[m[41m [m
[32m+[m[32mSome Useful guides and information for using Spring, Vue, and other technology used in the project can be found here:[m
[32m+[m
[32m+[m[32m- [Building a RESTful service with SpringBoot](https://spring.io/guides/gs/rest-service/)[m
[32m+[m[32m- [The VueJS Documentation](https://vuejs.org/v2/guide/)[m[41m [m
[32m+[m[32m- [Google Java Style Guide](https://google.github.io/styleguide/javaguide.html)[m
[1mdiff --git a/application.properties.example b/application.properties.example[m
[1mnew file mode 100644[m
[1mindex 0000000..9f41087[m
[1m--- /dev/null[m
[1m+++ b/application.properties.example[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mspring.jpa.database-platform=org.hibernate.dialect.MySQLDialect[m
[32m+[m[32mspring.jpa.show-sql=false[m
[32m+[m[32mspring.jpa.hibernate.use-new-id-generator-mappings=false[m
[32m+[m
[32m+[m[32mspring.datasource.url=jdbc:mysql://localhost:3306/smart-home-simulator?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=EST[m
[32m+[m[32mspring.datasource.username=root[m
[32m+[m[32mspring.datasource.password=[m
\ No newline at end of file[m
[1mdiff --git a/pom.xml b/pom.xml[m
[1mindex 0610ef5..b5a9e73 100644[m
[1m--- a/pom.xml[m
[1m+++ b/pom.xml[m
[36m@@ -23,7 +23,10 @@[m
 			<groupId>org.springframework.boot</groupId>[m
 			<artifactId>spring-boot-starter-web</artifactId>[m
 		</dependency>[m
[31m-[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-data-rest</artifactId>[m
[32m+[m		[32m</dependency>[m
 		<dependency>[m
 			<groupId>org.springframework.boot</groupId>[m
 			<artifactId>spring-boot-devtools</artifactId>[m
[36m@@ -31,9 +34,12 @@[m
 			<optional>true</optional>[m
 		</dependency>[m
 		<dependency>[m
[31m-			<groupId>org.hsqldb</groupId>[m
[31m-			<artifactId>hsqldb</artifactId>[m
[31m-			<scope>runtime</scope>[m
[32m+[m			[32m<groupId>org.springframework.boot</groupId>[m
[32m+[m			[32m<artifactId>spring-boot-starter-data-jpa</artifactId>[m
[32m+[m		[32m</dependency>[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>mysql</groupId>[m
[32m+[m			[32m<artifactId>mysql-connector-java</artifactId>[m
 		</dependency>[m
 		<dependency>[m
 			<groupId>org.springframework.boot</groupId>[m
[1mdiff --git a/schema/smart-home-simulator_2020-10-11.sql b/schema/smart-home-simulator_2020-10-11.sql[m
[1mnew file mode 100644[m
[1mindex 0000000..1d192f4[m
[1m--- /dev/null[m
[1m+++ b/schema/smart-home-simulator_2020-10-11.sql[m
[36m@@ -0,0 +1,123 @@[m
[32m+[m[32m# ************************************************************[m
[32m+[m[32m# Sequel Pro SQL dump[m
[32m+[m[32m# Version 5446[m
[32m+[m[32m#[m
[32m+[m[32m# https://www.sequelpro.com/[m
[32m+[m[32m# https://github.com/sequelpro/sequelpro[m
[32m+[m[32m#[m
[32m+[m[32m# Host: localhost (MySQL 5.7.26)[m
[32m+[m[32m# Database: smart-home-simulator[m
[32m+[m[32m# Generation Time: 2020-10-12 01:39:05 +0000[m
[32m+[m[32m# ************************************************************[m
[32m+[m
[32m+[m
[32m+[m[32m/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;[m
[32m+[m[32m/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;[m
[32m+[m[32m/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;[m
[32m+[m[32m/*!40101 SET NAMES utf8 */;[m
[32m+[m[32mSET NAMES utf8mb4;[m
[32m+[m[32m/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;[m
[32m+[m[32m/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;[m
[32m+[m[32m/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;[m
[32m+[m
[32m+[m
[32m+[m[32m# Dump of table appliances[m
[32m+[m[32m# ------------------------------------------------------------[m
[32m+[m
[32m+[m[32mDROP TABLE IF EXISTS `appliances`;[m
[32m+[m
[32m+[m[32mCREATE TABLE `appliances` ([m
[32m+[m[32m  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,[m
[32m+[m[32m  `type` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `state` int(11) NOT NULL,[m
[32m+[m[32m  `home_id` bigint(20) unsigned DEFAULT NULL,[m
[32m+[m[32m  `zone_id` bigint(20) unsigned DEFAULT NULL,[m
[32m+[m[32m  PRIMARY KEY (`id`),[m
[32m+[m[32m  KEY `appliances_home_id_foreign` (`home_id`),[m
[32m+[m[32m  KEY `appliances_zone_id_foreign` (`zone_id`),[m
[32m+[m[32m  CONSTRAINT `appliances_home_id_foreign` FOREIGN KEY (`home_id`) REFERENCES `homes` (`id`),[m
[32m+[m[32m  CONSTRAINT `appliances_zone_id_foreign` FOREIGN KEY (`zone_id`) REFERENCES `zones` (`id`)[m
[32m+[m[32m) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m# Dump of table homes[m
[32m+[m[32m# ------------------------------------------------------------[m
[32m+[m
[32m+[m[32mDROP TABLE IF EXISTS `homes`;[m
[32m+[m
[32m+[m[32mCREATE TABLE `homes` ([m
[32m+[m[32m  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,[m
[32m+[m[32m  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `date` datetime NOT NULL,[m
[32m+[m[32m  `outside_temp` int(11) NOT NULL,[m
[32m+[m[32m  PRIMARY KEY (`id`)[m
[32m+[m[32m) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m# Dump of table openings[m
[32m+[m[32m# ------------------------------------------------------------[m
[32m+[m
[32m+[m[32mDROP TABLE IF EXISTS `openings`;[m
[32m+[m
[32m+[m[32mCREATE TABLE `openings` ([m
[32m+[m[32m  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,[m
[32m+[m[32m  `type` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `state` smallint(6) NOT NULL DEFAULT '0',[m
[32m+[m[32m  `zone_id` bigint(20) unsigned DEFAULT NULL,[m
[32m+[m[32m  PRIMARY KEY (`id`),[m
[32m+[m[32m  KEY `openings_zone_id_foreign` (`zone_id`),[m
[32m+[m[32m  CONSTRAINT `openings_zone_id_foreign` FOREIGN KEY (`zone_id`) REFERENCES `zones` (`id`)[m
[32m+[m[32m) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m# Dump of table users[m
[32m+[m[32m# ------------------------------------------------------------[m
[32m+[m
[32m+[m[32mDROP TABLE IF EXISTS `users`;[m
[32m+[m
[32m+[m[32mCREATE TABLE `users` ([m
[32m+[m[32m  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,[m
[32m+[m[32m  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `email` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `role` enum('admin','user','child') COLLATE utf8mb4_unicode_ci DEFAULT NULL,[m
[32m+[m[32m  `password` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `home_id` bigint(20) unsigned DEFAULT NULL,[m
[32m+[m[32m  `zone_id` bigint(20) unsigned DEFAULT NULL,[m
[32m+[m[32m  PRIMARY KEY (`id`),[m
[32m+[m[32m  UNIQUE KEY `users_email_unique` (`email`),[m
[32m+[m[32m  KEY `users_zone_id_foreign` (`zone_id`),[m
[32m+[m[32m  KEY `users_home_id_foreign` (`home_id`),[m
[32m+[m[32m  CONSTRAINT `users_home_id_foreign` FOREIGN KEY (`home_id`) REFERENCES `homes` (`id`),[m
[32m+[m[32m  CONSTRAINT `users_zone_id_foreign` FOREIGN KEY (`zone_id`) REFERENCES `zones` (`id`)[m
[32m+[m[32m) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m# Dump of table zones[m
[32m+[m[32m# ------------------------------------------------------------[m
[32m+[m
[32m+[m[32mDROP TABLE IF EXISTS `zones`;[m
[32m+[m
[32m+[m[32mCREATE TABLE `zones` ([m
[32m+[m[32m  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,[m
[32m+[m[32m  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,[m
[32m+[m[32m  `temperature` int(11) NOT NULL DEFAULT '21',[m
[32m+[m[32m  `home_id` bigint(20) unsigned DEFAULT NULL,[m
[32m+[m[32m  PRIMARY KEY (`id`),[m
[32m+[m[32m  KEY `zones_home_id_foreign` (`home_id`),[m
[32m+[m[32m  CONSTRAINT `zones_home_id_foreign` FOREIGN KEY (`home_id`) REFERENCES `homes` (`id`)[m
[32m+[m[32m) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;[m
[32m+[m[32m/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;[m
[32m+[m[32m/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;[m
[32m+[m[32m/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;[m
[32m+[m[32m/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;[m
[32m+[m[32m/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;[m
[1mdiff --git a/src/main/java/com/soen343/smarthomesimulator/SmartHomeSimulatorApplication.java b/src/main/java/com/soen343/smarthomesimulator/SmartHomeSimulatorApplication.java[m
[1mindex 2da328f..461cf10 100644[m
[1m--- a/src/main/java/com/soen343/smarthomesimulator/SmartHomeSimulatorApplication.java[m
[1m+++ b/src/main/java/com/soen343/smarthomesimulator/SmartHomeSimulatorApplication.java[m
[36m@@ -2,9 +2,10 @@[m [mpackage com.soen343.smarthomesimulator;[m
 [m
 import org.springframework.boot.SpringApplication;[m
 import org.springframework.boot.autoconfigure.SpringBootApplication;[m
[32m+[m[32mimport org.springframework.boot.web.servlet.support.SpringBootServletInitializer;[m
 [m
 @SpringBootApplication[m
[31m-public class SmartHomeSimulatorApplication {[m
[32m+[m[32mpublic class SmartHomeSimulatorApplication extends SpringBootServletInitializer {[m
 [m
 	public static void main(String[] args) {[m
 		SpringApplication.run(SmartHomeSimulatorApplication.class, args);[m
[1mdiff --git a/src/main/java/com/soen343/smarthomesimulator/controllers/UserController.java b/src/main/java/com/soen343/smarthomesimulator/controllers/UserController.java[m
[1mnew file mode 100644[m
[1mindex 0000000..461d8b3[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/com/soen343/smarthomesimulator/controllers/UserController.java[m
[36m@@ -0,0 +1,42 @@[m
[32m+[m[32mpackage com.soen343.smarthomesimulator.controllers;[m
[32m+[m
[32m+[m[32mimport com.soen343.smarthomesimulator.models.User;[m
[32m+[m[32mimport com.soen343.smarthomesimulator.services.UserService;[m
[32m+[m[32mimport org.springframework.beans.factory.annotation.Autowired;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.GetMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PostMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RequestParam;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RestController;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32m@RestController[m
[32m+[m[32mpublic class UserController {[m
[32m+[m
[32m+[m[32m    @Autowired UserService userService;[m
[32m+[m
[32m+[m[32m    @GetMapping("/users")[m
[32m+[m[32m    public List<User> index() {[m
[32m+[m[32m        return userService.findAll();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @GetMapping("/user")[m
[32m+[m[32m    public User show(@RequestParam(value = "id") Long id) {[m
[32m+[m[32m        // TODO: get some user with "id"[m
[32m+[m[32m        return userService.findById(id);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @PostMapping("/user/store")[m
[32m+[m[32m    public String store(@RequestParam(value = "name") String name,[m
[32m+[m[32m                        @RequestParam(value = "email") String email,[m
[32m+[m[32m                        @RequestParam(value = "password") String password) {[m
[32m+[m
[32m+[m[32m        // TODO: Input Validation[m
[32m+[m
[32m+[m[32m        if (userService.save(new User(name, email, password)) != null) {[m
[32m+[m[32m            return "{\"success\": true}";[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return "{\"success\": false}";[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/main/java/com/soen343/smarthomesimulator/models/Appliance.java b/src/main/java/com/soen343/smarthomesimulator/models/Appliance.java[m
[1mnew file mode 100644[m
[1mindex 0000000..b9d5eff[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/com/soen343/smarthomesimulator/models/Appliance.java[m
[36m@@ -0,0 +1,80 @@[m
[32m+[m[32mpackage com.soen343.smarthomesimulator.models;[m
[32m+[m
[32m+[m[32mimport com.fasterxml.jackson.annotation.JsonProperty;[m
[32m+[m[32mimport javax.persistence.Entity;[m
[32m+[m[32mimport javax.persistence.GeneratedValue;[m
[32m+[m[32mimport javax.persistence.GenerationType;[m
[32m+[m[32mimport javax.persistence.Id;[m
[32m+[m[32mimport javax.persistence.Table;[m
[32m+[m[32mimport javax.persistence.JoinColumn;[m
[32m+[m[32mimport javax.persistence.ManyToOne;[m
[32m+[m
[32m+[m[32m@Entity[m
[32m+[m[32m@Table(name = "appliances")[m
[32m+[m[32mpublic class Appliance {[m
[32m+[m[32m    @Id[m
[32m+[m[32m    @GeneratedValue(strategy = GenerationType.AUTO)[m
[32m+[m[32m    private Long id;[m
[32m+[m
[32m+[m[32m    private String type;[m
[32m+[m
[32m+[m[32m    private String name;[m
[32m+[m
[32m+[m[32m    private Integer state;[m
[32m+[m
[32m+[m[32m    @ManyToOne[m
[32m+[m[32m    @JoinColumn(name = "home_id")[m
[32m+[m[32m    private Home home;[m
[32m+[m
[32m+[m[32m    @ManyToOne[m
[32m+[m[32m    @JoinColumn(name = "zone_id")[m
[32m+[m[32m    private Zone zone;[m
[32m+[m
[32m+[m[32m    public Long getId() {[m
[32m+[m[32m        return id;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setId(Long id) {[m
[32m+[m[32m        this.id = id;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public String getType() {[m
[32m+[m[32m        return type;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setType(String type) {[m
[32m+[m[32m        this.type = type;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public String getName() {[m
[32m+[m[32m        return name;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setName(String name) {[m
[32m+[m[32m        this.name = name;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Integer getState() {[m
[32m+[m[32m        return state;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setState(Integer state) {[m
[32m+[m[32m        this.state = state;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Home getHome() {[m
[32m+[m[32m        return home;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setHome(Home home) {[m
[32m+[m[32m        this.home = home;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Zone getZone() {[m
[32m+[m[32m        return zone;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setZone(Zone zone) {[m
[32m+[m[32m        this.zone = zone;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/main/java/com/soen343/smarthomesimulator/models/Home.java b/src/main/java/com/soen343/smarthomesimulator/models/Home.java[m
[1mnew file mode 100644[m
[1mindex 0000000..f3fde6d[m
[1m--- /dev/null[m
[1m+++ b/src/main/java/com/soen343/smarthomesimulator/models/Home.java[m
[36m@@ -0,0 +1,60 @@[m
[32m+[m[32mpackage com.soen343.smarthomesimulator.models;[m
[32m+[m
[32m+[m[32mimport com.fasterxml.jackson.annotation.JsonProperty;[m
[32m+[m[32mimport javax.persistence.Entity;[m
[32m+[m[32mimport javax.persistence.GeneratedValue;[m
[32m+[m[32mimport javax.persistence.GenerationType;[m
[32m+[m[32mimport javax.persistence.Id;[m
[32m+[m[32mimport javax.persistence.Table;[m
[32m+[m[32mimport javax.persistence.JoinColumn;[m
[32m+[m[32mimport javax.persistence.OneToMany;[m
[32m+[m[32mimport javax.persistence.ManyToOne;[m
[32m+[m[32mimport javax.persistence.OneToOne;[m
[32m+[m[32mimport java.sql.Timestamp;[m
[32m+[m
[32m+[m[32m@Entity[m
[32m+[m[32m@Table(name = "homes")[m
[32m+[m[32mpublic class Home {[m
[32m+[m
[32m+[m[32m    @Id[m
[32m+[m[32m    @GeneratedValue(strategy = GenerationType.AUTO)[m
[32m+[m[32m    private Long id;[m
[32m+[m
[32m+[m[32m    private String name;[m
[32m+[m
[32m+[m[32m    private Integer outside_temp;[m
[32m+[m
[32m+[m[32m    private Timestamp date;[m
[32m+[m
[32m+[m[32m    public Long getId() {[m
[32m+[m[32m        return id;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setId(Long id) {[m
[32m+[m[32m        this.id = id;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public String getName() {[m
[32m+[m[32m        return name;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setName(String name) {[m
[32m+[m[32m        this.name = name;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Integer getOutside_temp() {[m
[32m+[m[32m        return outside_temp;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setOutside_temp(Integer outside_temp) {[m
[32m+[m[32m        this.outside_temp = outside_temp;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Timestamp getDate() {[m
[32m+[m[32m        return date;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setDate(Timestamp date) {[m
[32m+[m[32m        this.date = date;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/main/java/com/soen343/smarthomesimulator/models/Opening.java b/src/main/java/com/soen343/smarthomesimul